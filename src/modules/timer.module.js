import { Module } from "../core/module";
import { allIntervals, clearAllIntervals } from "../utils";

export class TimerModule extends Module {
  #time;
  constructor(type, text) {
    super(type, text);
    this.#time = 0;
  }

  trigger() {
    this.#getTime();
    document.body.append(this.#createTimerBlock());

    const intervalTimer = setInterval(() => {
      this.#uppdateTextOfTimer();
      2;
      this.#time -= 1;
    }, 1000);

    allIntervals.push(intervalTimer);
  }

  #createTimerBlock() {
    const timerBlock = document.createElement("div");
    timerBlock.className = "timerModule-timerBlock";
    timerBlock.id = "timerBlock";
    timerBlock.textContent = `–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å—á–µ—Ç ${this.#time}-–∏ —Å–µ–∫—É–Ω–¥`;

    return timerBlock;
  }

  #getTime() {
    let userTime = +prompt("–ù–∞ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä?", 60);

    if (isNaN(userTime)) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞");
      this.#getTime()
    } else {
      this.#time = userTime;
    }
  }

  #getMiutesAndSeconds() {
    if (this.#time <= 10) {
      return { minutes: "00", seconds: `0${this.#time}` };
    } else if (this.#time < 60) {
      return { minutes: "00", seconds: `${this.#time}` };
    } else if (this.#time >= 60) {
      let minutes = Math.floor(this.#time / 60);
      let seconds = this.#time % 60;

      if (minutes < 10) {
        minutes = `0${minutes}`;
      }
      if (seconds < 10) {
        seconds = `0${seconds}`;
      }
      return { minutes, seconds };
    }
  }

  #uppdateTextOfTimer() {
    const timerBlock = document.querySelector("#timerBlock");
    const objTime = this.#getMiutesAndSeconds();

    objTime.minutes === "00"
    ? timerBlock.textContent = `–û—Å—Ç–∞–ª–æ—Å—å ${objTime.seconds} —Å–µ–∫—É–Ω–¥`
    : timerBlock.textContent = `–û—Å—Ç–∞–ª–æ—Å—å ${objTime.minutes} –º–∏–Ω—É—Ç : ${objTime.seconds} —Å–µ–∫—É–Ω–¥`
    

    if (this.#time === 0) {
      clearAllIntervals();
      timerBlock.textContent = "–í—Ä–µ–º—è –≤—ã—à–ª–æ ü•≥";
      setTimeout(() => timerBlock.remove(), 5000)
    }
  }
}
